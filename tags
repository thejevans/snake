!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3f0ea94c/
GROWTH	snake/snake.py	/^    GROWTH = 3$/;"	v
KEYMAP	snake/snake.py	/^KEYMAP = {'':'up', '':'down', '':'left', '':'right'}$/;"	v
OPair	snake/snake.py	/^OPair = Tuple[int, int]$/;"	v
SIZE	snake/snake.py	/^    SIZE = (50, 50)$/;"	v
Snake	snake/snake.py	/^class Snake:$/;"	c
TICK	snake/snake.py	/^    TICK = 0.5$/;"	v
__author__	snake/snake.py	/^__author__ = 'John Evans'$/;"	v
__copyright__	snake/snake.py	/^__copyright__ = 'Copyright 2020 John Evans'$/;"	v
__credits__	snake/snake.py	/^__credits__ = ['John Evans']$/;"	v
__email__	snake/snake.py	/^__email__ = 'thejevans@gmail.com'$/;"	v
__init__	snake/snake.py	/^    def __init__(self, size: OPair, growth: int) -> None:$/;"	m	class:Snake
__license__	snake/snake.py	/^__license__ = 'Apache License 2.0'$/;"	v
__maintainer__	snake/snake.py	/^__maintainer__ = 'John Evans'$/;"	v
__status__	snake/snake.py	/^__status__ = 'Development'$/;"	v
__version__	snake/snake.py	/^__version__ = '0.0.1'$/;"	v
collision	snake/snake.py	/^    def collision(self) -> bool:$/;"	m	class:Snake
display	snake/snake.py	/^    def display(self) -> None:$/;"	m	class:Snake
eat	snake/snake.py	/^    def eat(self) -> None:$/;"	m	class:Snake
event	snake/snake.py	/^            event = events.get(TICK)$/;"	v
long_description	setup.py	/^    long_description = fh.read()$/;"	v
move	snake/snake.py	/^    def move(self, direction: str) -> bool:$/;"	m	class:Snake
previous	snake/snake.py	/^                previous = KEYMAP[event]$/;"	v
previous	snake/snake.py	/^    previous = 'up'$/;"	v
snake	snake/snake.py	/^    snake = Snake(SIZE, GROWTH)$/;"	v
t_i	snake/snake.py	/^                t_i = time.perf_counter()$/;"	v
t_i	snake/snake.py	/^        t_i = time.perf_counter()$/;"	v
